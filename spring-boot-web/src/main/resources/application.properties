#DATASOURCE（DataSourceAutoConfiguration＆DataSourceProperties）
#JDBC数据库的URL。
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8&useSSL=true&serverTimezone=GMT%2B8
#登录数据库的用户名。
spring.datasource.username=root
#数据库的登录密码。
spring.datasource.password=123456
#JDBC驱动程序的完全限定名称。默认情况下，基于URL自动检测。
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#要使用的连接池实现的完全限定名称。默认情况下，它是从类路径中自动检测到的。使用druid连接池
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#初始化数据库时是否发生错误时停止。
#spring.datasource.continue-on-error=false
#Data（DML）脚本资源引用。
#spring.datasource.data=
#用于执行DML脚本的数据库的用户名（如果不同）。
#spring.datasource.data-username=
#执行DML脚本的数据库的密码（如果不同）。
#spring.datasource.data-password=
#是否生成随机数据源名称。
#spring.datasource.generate-unique-name=false
#使用可用的DDL和DML脚本初始化数据源。
#spring.datasource.initialization-mode=embedded
#是否启用JMX支持（如果由基础池提供）。已弃用
#spring.datasource.jmx-enabled=false
#JNDI数据源的位置。设置时将忽略类，URL，用户名和密码。
#spring.datasource.jndi-name=
#数据源的名称。使用嵌入式数据库时默认为“testdb”。
#spring.datasource.name=
#在DDL或DML脚本中使用的平台（例如架构-${platform}.sql或data-${platform}.sql）。
#spring.datasource.platform=all
##Schema（DDL）脚本资源引用。
#spring.datasource.schema=
#执行DDL脚本的数据库的用户名（如果不同）
#spring.datasource.schema-username=
#执行DDL脚本的数据库的密码（如果不同）。
#spring.datasource.schema-password=
#SQL初始化脚本中的语句分隔符。
#spring.datasource.separator=;
#SQL脚本编码。
#spring.datasource.sql-script-encoding=
#JDBC数据库的URL。
##XA数据源完全限定名称。
#spring.datasource.xa.data-source-class-name=
##传递给XA数据源的属性。
#spring.datasource.xa.properties=
#CommonsDBCP2特定设置
#spring.datasource.dbcp2.*
#Hikari特定设置
#spring.datasource.hikari.*=
#Tomcat数据源特定设置
#spring.datasource.tomcat.*=

#连接池的设置
#初始化时建立物理连接的个数
spring.datasource.druid.initial-size=5
#最小连接池数量
spring.datasource.druid.min-idle=5
#最大连接池数量maxIdle已经不再使用
spring.datasource.druid.max-active=20
#获取连接时最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
#既作为检测的间隔时间又作为testWhileIdel执行的依据
spring.datasource.druid.time-between-eviction-runs-millis=60000
#销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
spring.datasource.druid.min-evictable-idle-time-millis=30000
#用来检测连接是否有效的sql必须是一个查询语句
#mysql中为select'x'
#oracle中为select1fromdual
spring.datasource.druid.validation-query=select'x'
#申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-borrow=false
#归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
spring.datasource.druid.test-on-return=false
#当数据库抛出不可恢复的异常时,抛弃该连接
spring.datasource.druid.exception-sorter-class-name=com.alibaba.druid.pool.vendor.MySqlExceptionSorter
#是否缓存preparedStatement,mysql5.5+建议开启
#spring.datasource.druid.pool-prepared-statements=true
#当值大于0时poolPreparedStatements会自动修改为true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#配置扩展插件
spring.datasource.druid.filters=stat,wall
#通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#合并多个DruidDataSource的监控数据
spring.datasource.druid.use-global-data-source-stat=true
#设置访问druid监控页的账号和密码,默认没有http://localhost:8080/druid
#spring.datasource.druid.stat-view-servlet.login-username=admin
#spring.datasource.druid.stat-view-servlet.login-password=admin



#JPA（JpaBaseConfiguration，HibernateJpaAutoConfiguration）
#要操作的目标数据库，默认情况下自动检测。也可以使用“databasePlatform”属性进行设置。
spring.jpa.database=mysql
#create:每次运行程序时，都会重新创建表，故而数据会丢失。
#create-drop：每次运行程序时会先创建表结构，然后待程序结束时清空表。
#upadte：每次运行程序，没有表时会创建表，如果对象发生改变会更新表结构，原有数据不会清空，只会更新（推荐使用）。
#validate：运行程序会校验数据与数据库的字段类型是否相同，字段不同会报错。
#none:禁用DDL处理。 spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.hibernate.ddl-auto=update
#设置hibernate方言
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#注册OpenEntityManagerInViewInterceptor。将JPAEntityManager绑定到线程以进行整个请求处理。视图呈现期间执行数据库查询
spring.jpa.open-in-view=true
#是否启用SQL语句的日志记录
spring.jpa.show-sql=true
#formatsql
spring.jpa.properties.hibernate.format_sql=true
#JAPA存储库的Bootstrap模式。
#spring.data.jpa.repositories.bootstrap-mode=default
#是否启用JPA存储库。
#spring.data.jpa.repositories.enabled=true
#要操作的目标数据库的名称，默认情况下自动检测。也可以使用“Database”枚举来设置。
#spring.jpa.database-platform=
#是否在启动时初始化架构。
#spring.jpa.generate-ddl=false
#隐式命名策略的完全限定名称。
#spring.jpa.hibernate.naming.implicit-strategy=
##物理命名策略的完全限定名称。
#spring.jpa.hibernate.naming.physical-strategy=
##是否将Hibernate的较新的IdentifierGenerator用于AUTO，TABLE和SEQUENCE。
#spring.jpa.hibernate.use-new-id-generator-mappings=
#Mapping资源（相当于persistence.xml中的“mapping-file”条目）。
#spring.jpa.mapping-resources=
##要在JPA提供程序上设置的其他本机属性。
#spring.jpa.properties.*=

com.cfy.web.title=ChenFangYa
com.cfy.web.description=滴滴答答滴滴答答